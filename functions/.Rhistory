#### 0. Dependencies ####
library(stargazer)
library(tidyverse)
library(broom)
library(texreg)
library(xtable)
library(pals)
library(ggridges)
library(ggpubr)
library(haven)
set.seed(89)
rm(list = ls())
source("functions/conjoint_functions.R")
eval(parse("functions/wtp_functions.R", encoding="UTF-8"))
eval(parse("functions/IPUMS_functions.R", encoding="UTF-8"))
eval(parse("functions/labels_functions.R", encoding="UTF-8"))
#### 0. Cleaning and Combining ####
country_data <- list()
country_codes <- c("AUS", "BR", "CAN", "CHL", "CHN", "COL", "FR", "IT", "SP", "UK", "US", "UGA", "IND")
for (country in country_codes) {
country_data[[country]] <- read_csv(paste0("data/data_", country, ".csv"))
}
# Creating homogenized demographics variables
for (country in country_codes) {
country_data[[country]] <- IPUMS_contract(country_data[[country]])
country_data[[country]] <- IPUMS_employment(country_data[[country]])
country_data[[country]] <- IPUMS_education(country_data[[country]])
country_data[[country]] <- IPUMS_work(country_data[[country]])
}
# Merging weights
country_weights <- list()
for (country in c("AUS", "BR", "CHL", "CHN", "COL", "FR", "IT", "UK", "US")) {
country_weights[[country]] <- read_csv(paste0("weights/", country, "_w.csv"))
country_data[[country]] <- left_join(country_data[[country]], country_weights[[country]], by = "id")
}
for (country in c("AUS", "BR", "CHL", "CHN", "COL", "FR", "IT", "UK", "US")) {
aux <- country
country_data[[country]] <- country_data[[aux]] %>%
mutate(weights_n = weights*nrow(country_data[[aux]])/100,
weights = weights/100)
}
# Recode for reasons to get or not get the vaccine
for (country in c("BR", "FR")) {
country_data[[country]]$Q14.2 <- gsub(", \t", ",", country_data[[country]]$Q14.2)
}
for (country in country_codes) {
country_data[[country]]$Q14.2 <- gsub(", ", "|", country_data[[country]]$Q14.2)
country_data[[country]] <- country_data[[country]] %>%
separate(Q14.2, into = c(paste0("int_reason_notget_", seq(1:7))), "\\,")
}
for (country in country_codes) {
country_data[[country]]$Q14.3 <- gsub(", ", "|", country_data[[country]]$Q14.3)
country_data[[country]] <- country_data[[country]] %>%
separate(Q14.3, into = c(paste0("int_reason_get_", seq(1:12))), "\\,")
}
# Recode for comorbilities
for (country in country_codes) {
country_data[[country]] <- country_data[[country]] %>%
separate(Q19.2, into = c(paste0("qol_condition_", seq(1:10))), "\\,")
}
data_combined <- readRDS("C:/Users/Matias/Dropbox/Predoctoral/Vaccine Study/Github/CANDOUR/data/data_combined.rds")
x <- data_combined %>% filter(country == "Chile")
library(tidyverse)
x <- data_combined %>% filter(country == "Chile")
View(x)
#### 0. Dependencies ####
library(stargazer)
library(tidyverse)
library(broom)
library(texreg)
library(xtable)
library(pals)
library(ggridges)
library(ggpubr)
library(haven)
set.seed(89)
rm(list = ls())
source("functions/conjoint_functions.R")
eval(parse("functions/wtp_functions.R", encoding="UTF-8"))
eval(parse("functions/IPUMS_functions.R", encoding="UTF-8"))
eval(parse("functions/labels_functions.R", encoding="UTF-8"))
#### 0. Cleaning and Combining ####
country_data <- list()
country_codes <- c("AUS", "BR", "CAN", "CHL", "CHN", "COL", "FR", "IT", "SP", "UK", "US", "UGA", "IND")
for (country in country_codes) {
country_data[[country]] <- read_csv(paste0("data/raw data/data_", country, ".csv"))
}
data_combined <- readRDS("C:/Users/Matias/Dropbox/Predoctoral/Vaccine Study/Github/CANDOUR/data/data_combined.rds")
unique(data_combined$EMPLOYMENT)
library(tidyverse)
x <- data_combined %>% filter(EMPLOYMENT == "NIU")
View(x)
x <- data_combined %>% filter(EMPLOYMENT == "NIU") %>% select(country, EMPLOYMENT)
View(x)
Employment <- function(ITA){
ITA$EMPLOYMENT <- "NA"
ITA <- ITA %>% mutate(EMPLOYMENT = if_else(Q22.4 == "Sì" | Q22.5 == "Sì","Employ",
if_else(Q22.10=="Sì","Unemploy",
if_else(Q22.3=="Non in grado di lavorare permanentemente","Not active",Q22.12))))
}
data_fram <- Employment(data_fram)
Employed <- c("Employ")
Unemployed <- c("Unemploy")
Unemployed_never_work <- c("")
Not_economic <- c("Not active")
Students <- c("Uno studente")
Pension_or_K <- c("Destinatario di una o più pensioni da un lavoro precedente o beneficiario di redditi (affitto, proprietà o azioni)")
Homemakers <- c("Una casalinga")
Others <- c("Altro")
Unknow <- c("Non saprei","Preferisco non rispondere")
library(readr)
data_IT <- read_csv("C:/Users/Matias/Dropbox/Predoctoral/Vaccine Study/Github/CANDOUR/data/data_IT.csv")
View(data_IT)
data_IT <- Employment(data_IT)
library(readr)
data_IT <- read_csv("C:/Users/Matias/Dropbox/Predoctoral/Vaccine Study/Github/CANDOUR/data/raw data/data_IT.csv")
View(data_IT)
data_IT <- Employment(data_IT)
View(data_IT)
x <- data_IT %>% select(EMPLOYMENT, starts_with("Q22"))
View(x)
Employment <- function(ITA){
ITA$EMPLOYMENT <- "NA"
ITA <- ITA %>% mutate(EMPLOYMENT = if_else(Q22.3=="Non in grado di lavorare permanentemente","Not active",
if_else(Q22.4 == "Sì" | Q22.5 == "Sì", "Employ",
if_else(Q22.10=="Sì" & Q22.3=="Sì","Unemploy",
if_else(Q22.10=="Sì" & Q22.3=="No", "Unemploy_n", Q22.12)))))
}
data_IT <- Employment(data_IT)
x <- data_IT %>% select(EMPLOYMENT, starts_with("Q22"))
View(x)
Employment <- function(ITA){
ITA <- ITA %>% mutate(EMPLOYMENT = if_else(Q22.3=="Non in grado di lavorare permanentemente","Not active",
if_else(Q22.4 == "Sì" | Q22.5 == "Sì", "Employ",
if_else(Q22.10=="Sì" & Q22.3=="Sì","Unemploy",
if_else(Q22.10=="Sì" & Q22.3=="No", "Unemploy_n", Q22.12)))))
}
data_IT <- Employment(data_IT)
View(x)
x <- data_IT %>% select(EMPLOYMENT, starts_with("Q22"))
View(x)
Employment <- function(ITA){
ITA <- ITA %>% mutate(EMPLOYMENT = if_else(Q22.3=="Non in grado di lavorare permanentemente","Not active",
if_else(Q22.4 == "Sì" | Q22.5 == "Sì", "Employ",)))
#if_else(Q22.10=="Sì" & Q22.3=="Sì","Unemploy",
#       if_else(Q22.10=="Sì" & Q22.3=="No", "Unemploy_n", )))))
}
Employment <- function(ITA){
ITA <- ITA %>% mutate(EMPLOYMENT = if_else(Q22.3=="Non in grado di lavorare permanentemente","Not active",
if_else(Q22.4 == "Sì" | Q22.5 == "Sì", "Employ",)))
#if_else(Q22.10=="Sì" & Q22.3=="Sì","Unemploy",
#       if_else(Q22.10=="Sì" & Q22.3=="No", "Unemploy_n", )))))
}
data_IT <- Employment(data_IT)
Employment <- function(ITA){
ITA <- ITA %>% mutate(EMPLOYMENT = if_else(Q22.3=="Non in grado di lavorare permanentemente","Not active",
if_else(Q22.4 == "Sì" | Q22.5 == "Sì", "Employ",Q22.12)))
#if_else(Q22.10=="Sì" & Q22.3=="Sì","Unemploy",
#       if_else(Q22.10=="Sì" & Q22.3=="No", "Unemploy_n", )))))
}
data_IT <- Employment(data_IT)
x <- data_IT %>% select(EMPLOYMENT, starts_with("Q22"))
View(x)
View(data_IT)
Employment <- function(ITA){
ITA <- ITA %>% mutate(EMPLOYMENT = if_else(Q22.3=="Non in grado di lavorare permanentemente","Not active",
if_else(Q22.3 %in% c("Non saprei", "Preferisco non rispondere") & (Q22.4 == "Sì" | Q22.5 == "Sì"), "Employ",
if_else(Q22.3 == "Sì" & (Q22.4 == "Sì" | Q22.5 == "Sì"), "Employ",
if_else(Q22.3 == "Sì" & Q22.10=="Sì", "Unemploy",
if_else(Q22.3 == "No" & Q22.10=="Sì", "Unemploy_n", Q22.12))))))
}
data_IT <- Employment(data_IT)
x <- data_IT %>% select(EMPLOYMENT, starts_with("Q22"))
View(x)
